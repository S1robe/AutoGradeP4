#!/bin/python

import os.path
import sys
import re
import subprocess as subp

passBoardMsg = "Thread $x: Wooh! Iâ€™m about to ride the roller coaster for the (?:(?:(?:[1-9]|(?:[1-9]+0))*1 st)|(?:(?:[1-9]|(?:[1-9]+0))*2 nd)|(?:(?:[1-9]|(?:[1-9]+0))*3 rd)|(?:(?:[1-9]|(?:[1-9]+0))*[4-9] th)) time! I have (?:[1-9]|(?:[1-9]+0))*[1-9]{1}( |\\n){1}iterations left\\."
passExitMsg = "Thread $x: Completed (?:[1-9]|([1-9]+0))*[1-9]{1} iterations on the roller coaster\\. Exiting\\."
rideBeginMsg = "Car: (?:[1-9]|(?:[1-9]+0))*[0-9]{1} passengers are riding the roller coaster\\. Off we go on the (?:[1-9]|(?:[1-9]+0))*[1-9]{1} ride!"
rideCompleteMsg = "Car:  ride (?:[1-9]|(?:[1-9]+0))*[1-9]{1} completed\\."
progExit = "Car: Roller coaster shutting down\\."


# finds all matching strings according to @refPattern
def getOutput(refPattern: str, outp: str):
    return re.findall(refPattern, outp, flags=re.IGNORECASE)


argc = len(sys.argv)
if argc < 2:
    print("Usage: ./grade <filename (txt or exe)> <# n> <# c> <# i>")
    exit(1)

filename = sys.argv[1]  # this script will run the provided named
n = int(sys.argv[2])
c = int(sys.argv[3])
i = int(sys.argv[4])
args = None

isExec = True
if os.path.exists("./" + filename):
    filename = "./" + filename
    args = list([filename, "-n", str(n), "-c", str(c), "-i", str(i)])
    isExec = os.access(filename, os.X_OK)

elif os.path.exists(filename):
    args = list([filename, "-n", str(n), "-c", str(c), "-i", str(i)])
    isExec = os.access(filename, os.X_OK)
else:
    print("Cant find ", filename)
    exit(1)

try:
    pout = ""
    if isExec:
        pout = subp.check_output(args, shell=True, text=True)
    else:
        pout = "".join(open(filename, "r").readlines())
    # print(pout)
    # print(getOutput(passBoardMsg.replace("$x", str(0)), pout))
    # exit(0)
    rideLim = int((n * i) / c + i)  # n*i "people" to serve, with c seats, therefore (n*i)/c rides,
    # + i for the average amt of times it runs < than c
    rideBeginMsgs = list()
    ridebeginMsgsCnt = 0
    rideCompleteMsgs = list()
    rideCompleteMsgsCnt = 0
    for x in range(n + 1):

        rideBeginMsgs.append(list(set(getOutput(passBoardMsg.replace("$x", str(x)), pout))))  # count times began
        ridebeginMsgsCnt += len(rideBeginMsgs[x])
        rideCompleteMsgs.append(list(set(getOutput(passExitMsg.replace("$x", str(x)), pout))))  # count times end
        rideCompleteMsgsCnt += len(rideCompleteMsgs[x])

    if not (1 < ridebeginMsgsCnt < rideLim):
        print("Invalid amount of rides possible.")
        exit(1)

    if ridebeginMsgsCnt != rideCompleteMsgsCnt:
        print("Unequal amount of rides to completions.")
        exit(1)

    if len(getOutput(progExit, pout)) != 1:
        print("No end message found :/")
        exit(1)


except subp.CalledProcessError as rproc:  # returned process
    # Process returned non-zero error code
    print("Something has gone horribly wrong!")
    exit(1)

except OSError as oerr:
    print("File could not be read for testing ", filename, " :(")
    exit(1)

print("All test passed!")
exit(0)
